name: Deploy to Vercel
on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Run tests
        run: npx nx test task-manager

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Build
        run: npx nx build task-manager --configuration=production
      - name: Debug Vercel Tokens
        run: |
          if [ -n "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "✓ VERCEL_TOKEN is set"
          else
            echo "✗ VERCEL_TOKEN is missing"
          fi
          if [ -n "${{ secrets.VERCEL_ORG_ID }}" ]; then
            echo "✓ VERCEL_ORG_ID is set"
          else
            echo "✗ VERCEL_ORG_ID is missing"
          fi
          if [ -n "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "✓ VERCEL_PROJECT_ID is set"
          else
            echo "✗ VERCEL_PROJECT_ID is missing"
          fi
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'
